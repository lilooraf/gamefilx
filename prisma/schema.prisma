// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id             Int      @id @unique
  name           String
  topCriticScore Float
  images         Json     @db.Json
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  gameUsers UserGame[]
}

enum Status {
  PLAYING
  COMPLETED
  WISH_LIST
}

model UserGame {
  id     String  @id @unique
  score  Int?
  review String?
  status Status? @default(WISH_LIST)
  gameId Int
  userId String
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  game   Game    @relation(fields: [gameId], references: [id], onDelete: Cascade)
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  userGames UserGame[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
